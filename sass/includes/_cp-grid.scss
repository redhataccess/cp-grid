@import "variables";

@mixin make-cp-grid-size($screen: 'xs', $gutter_size: $cp_grid_gutter, $num_cols: $cp_num_cols) {

	@for $i from 1 through ($num_cols / 2) {
		$size: ($i / $num_cols) * 100%;
		$inverse_cols: 12 - $i;
		$inverse_size: (1 - ($i / $num_cols)) * 100%;
		$inverse_size_rnd: round($inverse_size);

		&[data-cp-grid-size*="#{$screen}-#{$i}-cols"] {
			width: calc(#{$size} - #{$gutter_size});
		}

		@if ($inverse_size_rnd != 0% and $inverse_size_rnd != 50%) {
			&[data-cp-grid-size*="#{$screen}-#{$inverse_cols}-cols"] {
				width: calc(#{$inverse_size} - #{$gutter_size});
			}
		}
	}

	&[data-cp-grid-size*="#{$screen}-12-cols"] {
		width: calc(100% - #{$gutter_size});
	}
}

@mixin make-cp-grid-cols($screen: 'xs', $gutter_size: $cp_grid_gutter, $num_cols: $cp_num_cols, $prefix: '') {

	@for $i from 1 through $num_cols {
		$size: (1 / $i) * 100%;

		#{$prefix}[data-cp-grid*="#{$screen}-#{$i}"] .cp-grid-item {
			width: calc(#{$size} - #{$gutter_size});

			@include make-cp-grid-size($screen, $gutter_size, $num_cols);
		}
	}
}